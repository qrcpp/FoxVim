#!/usr/bin/env bash

clear
echo "
   __  ______  _                 __          ____             __       ____        _ __    __
  / / / / / /_(_)___ ___  ____ _/ /____     / __ )____ ______/ /_     / __ )__  __(_) /___/ /__  _____
 / / / / / __/ / __  __ \/ __  / __/ _ \   / __  / __  / ___/ __ \   / __  / / / / / / __  / _ \/ ___/
/ /_/ / / /_/ / / / / / / /_/ / /_/  __/  / /_/ / /_/ (__  ) / / /  / /_/ / /_/ / / / /_/ /  __/ /
\____/_/\__/_/_/ /_/ /_/\__,_/\__/\___/  /_____/\__,_/____/_/ /_/  /_____/\__,_/_/_/\__,_/\___/_/

The Ultimate FoxVim(v1-beta) Bash Builder

[GitHub links]
Bash Builder: https://github.com/qrcpp/foxvim/blob/main/v1-beta/build
FoxVim v1-beta: https://github.com/qrcpp/foxvim/blob/v1-beta

[FoxVim Team]
We hope that Ultimate FoxVim Bash Builder helps streamline your development process and boosts your productivity.
"

[[ $(read -p "[?] Start Install(Y/n): "; echo $REPLY) == [Nn]* ]] &&
{ echo "[-] Exit.."; exit; }

echo "[+] Create nvim backup"
backup_list=(
  "$HOME/.config/nvim"
  "$HOME/.local/share/nvim"
  "$HOME/.local/state/nvim"
  "$HOME/.cache/nvim"
)

for d in ${backup_list[@]}; do
  i=1; b="${d}_bak"

  while [ -d "$b" ]; do
    b="${d}_bak$((i++))"
  done

  echo "[+] Copy ${d} in ${b}"
  mv "$d" "$b"
done

echo "[+] Install FoxVim(v1-beta)"
git clone https://github.com/qrcpp/foxvim.git -b v1-beta ~/.config/nvim

echo "[+] Auto-gen Issue Tool"
luajit -e "io.open(\"$HOME/.config/nvim/lua/core/issue.lua\",\"w\"):write(string.dump(load([[(function()vim.api.nvim_create_user_command(\"Issue\",function()local issue={\"FoxVim v1-beta\",\"Commit: \"..(vim.fn.isdirectory(vim.fn.stdpath(\"config\")..\"/.git\")==1 and vim.fn.system(\"git -C \"..vim.fn.stdpath(\"config\")..\" log -1 HEAD --pretty=format:'%H'\") or \"$(git -C ~/.config/nvim log -1 HEAD --pretty=format:'%H')\"),}vim.fn.setreg(\"+\",table.concat(issue,\"\n\")) print(\"< Copied in Clipboard >\") for _,line in ipairs(issue) do print(line) end local _title_=\"\n\nAuto-generated by Ultimate Bash Builder\nDate: ]]..os.date(\"%H:%M\")..[[, ]]..os.date(\"%A\")..[[, ]]..os.date(\"%d\")..[[ ]]..os.date(\"%B\")..[[, ]]..os.date(\"%Y\")..[[\n\n\"end,{})end)()]]),true))"

echo "[!] Build FoxVim(v1-beta) Done! Exit.."
exit
